# Normally the Smart Item Sorter will ignore the "powered" state of its dispenser and attempt to teleport an
# item stack in one of its inventory slots each game tick.
# Set this to true if you would like Smart Item Sorters to only activate when it is unpowered
disableWhenPowered: false

# set tickRate to the number of game ticks between housekeeping tasks. It is 20 (so, 1 second) by default.
# this will control how often smart item sorters will transfer items out of their inventory as well as
# how often dropped items will be teleported from above teleport pads.
tickRate: 20

# set chunkLoadSearchDelay to the number of ticks to wait after a chunk is loaded before searching it for
# Smart Item Sorters. This works around a problem where Spigot versions prior to 1.18 reports a chunk as loaded
# before it actually completely reloads all of the entities (including item frames) in the chunk. The default is
# 100 ticks or 5 seconds.
chunkLoadSearchDelay: 100

# when showActivity is true, every time a Smart Item Sorter teleports an item, it will rotate the
# activation item in the item frame attached to the dispenser as an external, visual
# indication that teleportation has been successful.
showActivity: true

# type of item frames to use for creating Smart Item Sorters
# Should be one or more of ITEM_FRAME or GLOW_ITEM_FRAME
itemSorterItemFrames:
  - ITEM_FRAME

# type of item frames to use for finding item targets
# Should be one or more of ITEM_FRAME or GLOW_ITEM_FRAME
targetItemFrames:
  - ITEM_FRAME

# when hideFrameWhenValid is true and an Eye of Ender is placed in an item frame on a dispenser to create a
# Smart Item Sorter, the plugin will make the item frame invisible as a visual indication that the block has
# been successfully created. If the Eye of Ender is removed, the item frame will become visible again.
hideFrameWhenValid: true

# the maximum number of blocks in any direction that will be searched for an acceptable target
# to transport an item to. The distance describes a sphere. So, the default value of 128 describes
# a sphere with a radius of 128 blocks centered on the Smart Item Sorter or teleport pad. Increasing this
# distance does not affect overall performance, but it does increase the likelihood that items will be
# teleported to targets that were not intended, but happened to be in range. The upper limit for maximum
# distance is that targets must still be found in loaded chunks regardless of the maximum distance.
maxTeleportDistance: 32

# by default, the smart item sorter is activated by placing an eye of ender in the item frame on
# the dispenser. However, any item placeable in an item frame can be used. So, you can
# make it more challenging to create a crafting block by choosing a rare item such as dragon head
# or dragon egg. In the simplest use cases, set activationItem to the name of the chosen item's material.
# See https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Material.html for possible material names.
activationItem: ENDER_EYE

# if you wish to strongly control who can create smart item sorters then you will want to choose an activation item
# that cannot be gathered from the world through normal means. In this case, you can set the activation item
# to a serialized ItemStack specification. Below is an example that forces the use of an eye of ender with a specific
# descriptive "lore" and plugin-specific NBT data.
# Use the "/smartitemsort item give" command to get this block in-game. The use of the give command itself is controlled
# with the smartitemsort.command.item-give permission.
#
# WARNING: Spigot may change how items are formatted from one release to the next, so care must be taken when upgrading
# server versions. It is recommended to keep an activation item stored someplace safe in-game and then after upgrading
# use the "/smartitemsort item show" command with the activation item in-hand to get the latest serialized form of the item
# and use that to update this configuration file.

#activationItem:
#  ==: org.bukkit.inventory.ItemStack
#  v: 2730
#  type: ENDER_EYE
#  meta:
#    ==: ItemMeta
#    meta-type: UNSPECIFIC
#    lore:
#    - '{"extra":[{"text":"smart item sort activator"}],"text":""}'
#    PublicBukkitValues:
#      smartitemsort:valid: 1i

# If you wish to make the activation item craft-able (presumably because you have configured it to be a distinct
# item by defining a serialized activationItem above), you can add a custom recipe to your server using existing
# datapack mechanics. If you list the name of the recipe here, smartitemsort will override the recipe so that instead
# of crafting the item in the recipe, the recipe's ingredients craft the special activation item defined above.
# This may be necessary as Minecraft does not normally allow you to define custom recipes that produce items with
# custom NBT (such as the activation item defined above.)
#activationItemRecipes:
  #- 'born2code:smartitemsorter_item'

# To help troubleshoot, a player can click on a smart item sorter or the top block of a teleport
# pad with the tool item in their main-hand and another item in their off-hand. The plugin will then
# inform the player where the item in their off-hand would have been teleported to if it had been
# placed in the smart item sorter or on the teleport pad.
toolItem: STICK

# Once a dispenser is converted to a Smart Item Sorter, it is given a custom name that is visible when you
# open its inventory. This serves as a reminder of the block's behavior.
customName: Item Sorter

# teleportPads are stacks of particular blocks that will automatically teleport dropped items to appropriate
# item frames when the dropped items are on top of them. Many pads can be defined mapping an arbitrary name for
# the pad to a list of block materials that comprise the stack of blocks forming the teleport pad. So, for example,
# the "simple" teleport pad is a crying obsidian block directly on top of a gilded blackstone block. If a dropped item
# is found in the block space above the crying obsidian block in that stack, it will be teleported. Note, that hopper
# pickup behavior applies, so the dropped item will be teleported if it is no more than one full block above the
# teleport pad. Therefore, it is not necessary to define new teleport pads simply to be able to place carpet or
# slabs above the pads already defined.
#
# Recognized names of materials can be found at https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html
teleportPads:
  simple: [CRYING_OBSIDIAN, GILDED_BLACKSTONE]
  magma:  [MAGMA_BLOCK, CRYING_OBSIDIAN, GILDED_BLACKSTONE]

# When the defaultTargetItem is placed in an item frame, that item frame because a target of "last resort". That is,
# if no other target can be found for the item, the item will be teleported to the target containing the
# defaultTargetItem
defaultTargetItem: CARROT_ON_A_STICK


# level of progress messages written to the console. One of: "off", "severe", "warning", "info", "config", "fine",
# "finer", "finest". "debug" (an alias for "fine") "trace" (an alias for "finer"), and "all" (an alias for "finest")
# are also accepted.
logLevel: CONFIG

# bStats provides anonymous feedback so that the plugin author is aware of which server types and versions are
# actually being used and need to be supported. See https://bstats.org/getting-started
bStats: true